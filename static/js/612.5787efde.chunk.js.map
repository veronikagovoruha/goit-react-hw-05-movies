{"version":3,"file":"static/js/612.5787efde.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SingleMovie/single-movie.module.css?1830","components/SingleMovie/SingleMovie.jsx","webpack://goit-react-hw-05-movies/./src/pages/SingleMoviePage/single-movie-page.module.css?180a","pages/SingleMoviePage/SingleMoviePage.jsx","shared/services/theMovieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"single-movie_wrapper__L9htj\",\"poster\":\"single-movie_poster__VJqyx\",\"wraperDescripton\":\"single-movie_wraperDescripton__uEhAn\",\"title\":\"single-movie_title__lYS-+\",\"userScore\":\"single-movie_userScore__Xz8dk\",\"Overviev\":\"single-movie_Overviev__9rrz8\",\"OvervievText\":\"single-movie_OvervievText__NZTPx\",\"list\":\"single-movie_list__02iq2\",\"item\":\"single-movie_item__iyYQE\",\"link\":\"single-movie_link__xR8TK\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Outlet } from \"react-router-dom\";\n\nimport styles from \"./single-movie.module.css\"\n\n\nfunction SingleMovie({ movie, from }) {\n    const {\n        title,\n        poster_path,\n        genres: genresArr,\n        release_date,\n        vote_average,\n        overview,\n      } = movie;\n      const poster = `https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`;\n      const date = release_date.slice(0, 4);\n      const userScore = vote_average * 10;\n      const genres =\n        genresArr.length > 0\n          ? genresArr.map(({ name }) => name).join(\", \")\n          : \"no Ganres\";\n      const description = overview ? overview : \"no overview \";\n    \n      console.log(from)\n\n    return (\n      <div className={styles.wrapper}>\n        <img\n          className={styles.poster}\n          src={poster}\n          alt={title}\n          width=\"360\"\n          height=\"540\"\n        />\n        <div className={styles.wraperDescripton}>\n          <p className={styles.title}>{`${title} (${date})`}</p>\n          <p className={styles.userScore}>{`User Score: ${userScore}%`}</p>\n          <p className={styles.Overviev}>Overviev</p>\n          <p className={styles.OvervievText}>{description}</p>\n          <p className={styles.Overviev}>Genres</p>\n          <p className={styles.OvervievText}>{genres}</p>\n        </div>\n\n        <div className={styles.additional_box}>\n            <ul className={styles.list}>\n              <li className={styles.item}><Link className={styles.link} to='cast' state={from}>Cast</Link></li>\n              <li className={styles.item}><Link className={styles.link} to='reviews' state={from}>Reviews</Link></li>\n            </ul>    \n            <Outlet />\n          </div>\n\n    </div>\n    )\n }\nexport default memo(SingleMovie);\n\nSingleMovie.defaultProps = {\n    item:{},\n}\nSingleMovie.propTypes = {\n    item: PropTypes.objectOf(\n        PropTypes.shape({\n            title: PropTypes.string,\n            overview: PropTypes.string,\n            genres: PropTypes.array,\n            vote_average: PropTypes.string,\n            poster_path: PropTypes.string,\n            release_date: PropTypes.string,\n        })\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"single-movie-page_btnBack__Fmbdi\"};","import SingleMovie from \"../../components/SingleMovie\";\nimport {getMovieDetails} from \"../../shared/services/theMovieApi\"\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport styles from \"./single-movie-page.module.css\"\n\nconst SingleMoviePage = () => {\n    \n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const {movieId} = useParams();\n\n    useEffect(()=> {\n        const fetchMovie = async() => {\n            setLoading(() => true);\n\n            try {\n                const movie = await getMovieDetails(movieId);\n                setMovie(() => movie)\n                setLoading(() => false);\n            } catch (error) {\n                setError(() => error);\n                setLoading(() => false);\n            }\n        };\n\n        fetchMovie();\n    }, [movieId])\n\n    const isMovie = Object.keys(movie).length > 0;\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from || \"/\";\n    const goBack = () => {\n        navigate(from);\n    }\n\n    console.log(from)\n\n    return(\n        <main>\n            <div>\n                {loading && <p>...Loading</p>}\n                {error && <p>Movie not found</p>}\n                {isMovie && <button className={styles.btnBack} type='button' onClick={goBack}>Go back</button>}\n                {isMovie && <SingleMovie movie={movie} from={{from}}/>}\n            </div>\n        </main>\n    )\n}\n\nexport default SingleMoviePage;","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL:  \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: '174088f8b022edeebba64c50a0d47a62',\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const {data} = await instance.get('trending/movie/day', {\n        params: {\n            page: 1,\n        }\n    });\n\n    return data.results;\n}\n\nexport const getMovieDetails = async (id) =>{\n    const {data} = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const getMovieCast = async (id) =>{\n    const {data} = await instance.get(`movie/${id}/credits`);\n    return data;\n\n}\n\nexport const getMovieReviews = async (id) =>{\n    const {data} = await instance.get(`movie/${id}/reviews`);\n    return data;\n\n}\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query\n        }\n    });\n\n    return data.results;\n}"],"names":["SingleMovie","movie","from","title","poster_path","genresArr","genres","release_date","vote_average","overview","poster","date","slice","userScore","length","map","name","join","description","console","log","className","styles","src","alt","width","height","to","state","memo","defaultProps","item","useState","setMovie","error","setError","loading","setLoading","movieId","useParams","useEffect","fetchMovie","getMovieDetails","isMovie","Object","keys","navigate","useNavigate","useLocation","type","onClick","instance","axios","baseURL","params","api_key","getTrendingMovies","get","page","data","results","id","getMovieCast","getMovieReviews","searchMovies","query"],"sourceRoot":""}
{"version":3,"file":"static/js/122.4ecbbd15.chunk.js","mappings":"qQAiDA,EA3CoB,WAChB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAyCN,EAAAA,EAAAA,WAAS,GAAlD,eAAOO,EAAP,KAAkBC,EAAlB,KAEOC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,2FACjBR,GAAW,kBAAM,CAAN,IADM,mBAIMS,EAAAA,EAAAA,IAAgBJ,GAJtB,OAIPK,EAJO,OAKbV,GAAW,kBAAM,CAAN,IACXF,GAAW,kBAAMY,EAAKC,OAAX,IANE,gDAQbX,GAAW,kBAAM,CAAN,IACXE,GAAS,0BATI,yDAAH,qDAalBM,GACH,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACNH,GAAoB,kBAAOP,GAAWA,EAAQe,OAAS,GAAM,CAAzC,GACvB,GAAE,CAACf,IAEJ,IAAMgB,EAAWhB,GAAWA,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAA6B,2BAAa,uBAAID,KAAW,uBAAIC,MAAvBF,EAAtC,IAExC,OACI,gCACChB,IAAW,uCACXE,IAAS,iCACTE,IAAa,wBACTU,MAKZ,C,mMC5CKK,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAU,gCACVC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,qBAAsB,CACpDH,OAAQ,CACJI,KAAM,KAHe,uBACtBf,EADsB,EACtBA,KADsB,kBAOtBA,EAAKC,SAPiB,2CAAH,qDAUjBe,EAAe,mCAAG,WAAOX,GAAP,yFACNG,EAASM,IAAT,gBAAsBT,IADhB,uBACpBL,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAKfiB,EAAY,mCAAG,WAAOZ,GAAP,yFACHG,EAASM,IAAT,gBAAsBT,EAAtB,aADG,uBACjBL,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAMZD,EAAe,mCAAG,WAAOM,GAAP,yFACNG,EAASM,IAAT,gBAAsBT,EAAtB,aADM,uBACpBL,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAMfkB,EAAY,mCAAG,WAAOC,GAAP,yFACHX,EAASM,IAAI,eAAgB,CAC9CH,OAAQ,CACJQ,MAAAA,KAHgB,uBACjBnB,EADiB,EACjBA,KADiB,kBAOjBA,EAAKC,SAPY,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","shared/services/theMovieApi.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport {getMovieReviews} from \"../../shared/services/theMovieApi\"\n\nconst ReviewsPage = () => {\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [isReviews, setReviewsPresented] = useState(false);\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            setLoading(() => true);\n\n            try {\n                const data = await getMovieReviews(movieId);\n                setLoading(() => false);\n                setReviews(() => data.results);\n            } catch (error) {\n                setLoading(() => false);\n                setError(() => error);\n            }\n        };\n        \n        fetchReviews(); \n    }, [movieId])\n\n    useEffect(() => {\n        setReviewsPresented(() => (reviews && reviews.length > 0) || 0)\n    }, [reviews])\n\n    const elements = reviews && reviews.map(({ id, author, content }) => <li key={id}><p>{author}</p><p>{content}</p></li>);\n\n    return (\n        <>\n        {loading && <p>....Loading</p>}\n        {error && <p>Error</p>}\n        {isReviews && <ul>\n            {elements} \n        </ul>}\n        </>\n        \n    )\n}\n\nexport default ReviewsPage;","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL:  \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: '174088f8b022edeebba64c50a0d47a62',\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const {data} = await instance.get('trending/movie/day', {\n        params: {\n            page: 1,\n        }\n    });\n\n    return data.results;\n}\n\nexport const getMovieDetails = async (id) =>{\n    const {data} = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const getMovieCast = async (id) =>{\n    const {data} = await instance.get(`movie/${id}/credits`);\n    return data;\n\n}\n\nexport const getMovieReviews = async (id) =>{\n    const {data} = await instance.get(`movie/${id}/reviews`);\n    return data;\n\n}\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query\n        }\n    });\n\n    return data.results;\n}"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","isReviews","setReviewsPresented","movieId","useParams","useEffect","fetchReviews","getMovieReviews","data","results","length","elements","map","id","author","content","instance","axios","baseURL","params","api_key","getTrendingMovies","get","page","getMovieDetails","getMovieCast","searchMovies","query"],"sourceRoot":""}
{"version":3,"file":"static/js/897.5769e7c5.chunk.js","mappings":"4PACA,GAAgB,YAAc,gCAAgC,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,0B,mBCQvIA,EAAgB,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEOC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAE,2FACdN,GAAW,kBAAM,CAAN,IADG,mBAISO,EAAAA,EAAAA,IAAaJ,GAJtB,OAIJK,EAJI,OAKVR,GAAW,kBAAM,CAAN,IACXF,GAAQ,kBAAMU,EAAKX,IAAX,IANE,gDAQVG,GAAW,kBAAM,CAAN,IACXE,GAAS,0BATC,yDAAF,qDAahBI,GACH,GAAE,CAACH,IAEJ,IAAMM,EAAWZ,GAAQA,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChDC,EAASD,EAAY,yDAAqDA,GAAiBE,EAEjG,OAAQ,gBAAaC,UAAWC,EAAAA,KAAxB,WACJ,gBAAKD,UAAWC,EAAAA,KAAaC,IAAKJ,EAAQK,MAAM,KAAKC,IAAKT,KAC1D,cAAGK,UAAWC,EAAAA,SAAd,SAAgCN,KAChC,cAAGK,UAAWC,EAAAA,KAAd,SAA4BL,MAHfF,EAKpB,IAED,OACI,gCACCZ,IAAW,uCACXE,IAAS,kCACV,eAAIgB,UAAWC,EAAAA,KAAf,SACKT,MAKZ,EAEDd,EAAc2B,YAAc,CACxBC,MAAO,IAaX,O,mMClEMC,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAU,gCACVC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,qBAAsB,CACpDH,OAAQ,CACJI,KAAM,KAHe,uBACtBvB,EADsB,EACtBA,KADsB,kBAOtBA,EAAKwB,SAPiB,2CAAH,qDAUjBC,EAAe,mCAAG,WAAOtB,GAAP,yFACNa,EAASM,IAAT,gBAAsBnB,IADhB,uBACpBH,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAKfD,EAAY,mCAAG,WAAOI,GAAP,yFACHa,EAASM,IAAT,gBAAsBnB,EAAtB,aADG,uBACjBH,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAMZ0B,EAAe,mCAAG,WAAOvB,GAAP,yFACNa,EAASM,IAAT,gBAAsBnB,EAAtB,aADM,uBACpBH,EADoB,EACpBA,KADoB,kBAEpBA,GAFoB,2CAAH,sDAMf2B,EAAY,mCAAG,WAAOC,GAAP,yFACHZ,EAASM,IAAI,eAAgB,CAC9CH,OAAQ,CACJS,MAAAA,KAHgB,uBACjB5B,EADiB,EACjBA,KADiB,kBAOjBA,EAAKwB,SAPY,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCast/movie-cast.module.css?cbe9","components/MovieCast/MovieCast.jsx","shared/services/theMovieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castWrapper\":\"movie-cast_castWrapper__V-Hqx\",\"list\":\"movie-cast_list__EJVaI\",\"nameReal\":\"movie-cast_nameReal__j4wWp\",\"item\":\"movie-cast_item__rmKb7\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport defaulImg from '../../images/user.png';\nimport styles from \"./movie-cast.module.css\"\n\nimport PropTypes from 'prop-types';\n\nimport {getMovieCast} from \"../../shared/services/theMovieApi\"\n\nconst MovieCastPage = () =>{\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const fetchMovie= async () => {\n            setLoading(() => true);\n\n            try {\n                const data = await getMovieCast(movieId);\n                setLoading(() => false);\n                setCast(() => data.cast);\n            } catch (error) {\n                setLoading(() => false);\n                setError(() => error);\n            }\n        };\n        \n        fetchMovie(); \n    }, [movieId])\n\n    const elements = cast && cast.map(({ id, name, character, profile_path }) => {\n        const srcUrl = profile_path ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2${profile_path}` : defaulImg;\n\n        return (<li key={id} className={styles.item}>\n            <img className={styles.icon} src={srcUrl} width=\"80\" alt={name}/>\n            <p className={styles.nameReal}>{name}</p>\n            <p className={styles.name}>{character}</p>\n        </li>);\n    })\n    \n    return (\n        <>\n        {loading && <p>....Loading</p>}\n        {error && <p>Error</p>}\n        <ul className={styles.list}>\n            {elements} \n        </ul>\n        </>\n        \n    )\n}\n\nMovieCastPage.defaulProps = {\n    items: [],\n}\nMovieCastPage.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string,\n            character: PropTypes.string,\n            profile_path: PropTypes.string,\n        })\n    )\n}\n\nexport default MovieCastPage;","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL:  \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: '174088f8b022edeebba64c50a0d47a62',\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const {data} = await instance.get('trending/movie/day', {\n        params: {\n            page: 1,\n        }\n    });\n\n    return data.results;\n}\n\nexport const getMovieDetails = async (id) =>{\n    const {data} = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const getMovieCast = async (id) =>{\n    const {data} = await instance.get(`movie/${id}/credits`);\n    return data;\n\n}\n\nexport const getMovieReviews = async (id) =>{\n    const {data} = await instance.get(`movie/${id}/reviews`);\n    return data;\n\n}\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get('search/movie', {\n        params: {\n            query\n        }\n    });\n\n    return data.results;\n}"],"names":["MovieCastPage","useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovie","getMovieCast","data","elements","map","id","name","character","profile_path","srcUrl","defaulImg","className","styles","src","width","alt","defaulProps","items","instance","axios","baseURL","params","api_key","getTrendingMovies","get","page","results","getMovieDetails","getMovieReviews","searchMovies","query"],"sourceRoot":""}